name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2

    - name: Prepare Dockerfile
      run: cp ./docker/Dockerfile.user ./Dockerfile
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./docker/Dockerfile.user
        push: true
        tags: danish19092001/venmo-clone:latest  # Replace with your Docker Hub username and repository

    - name: Verify Pushed Image
      run: docker pull danish19092001/venmo-clone:latest  # Replace with your Docker Hub username and repository

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }} 
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          sudo docker pull danish19092001/venmo-clone:latest
          sudo docker stop web-app || true
          sudo docker rm web-app || true
          sudo docker run -e DATABASE_URL ${{ secrets.DATABASE_URL }} --restart-always -d --name web-app -p 3005:3000 danish19092001/venmo-clone:latest
          # server {
          #         server_name venmo.score-book.com;

          #         location / {
          #             proxy_pass http://localhost:3001;
          #             proxy_http_version 1.1;
          #             proxy_set_header Upgrade $http_upgrade;
          #             proxy_set_header Connection 'upgrade';
          #             proxy_set_header Host $host;
          #             proxy_cache_bypass $http_upgrade;


          #                 # Basic Authentication
          #                 auth_basic "Restricted Content";
          #                 auth_basic_user_file /etc/nginx/.htpasswd;
          #         }

          #     listen 443 ssl; # managed by Certbot
          #     ssl_certificate /etc/letsencrypt/live/userapp.100xdevs.com/fullchain.pem; # managed by Certbot
          #     ssl_certificate_key /etc/letsencrypt/live/userapp.100xdevs.com/privkey.pem; # managed by Certbot
          #     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
          #     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

          # }
